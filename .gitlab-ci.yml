variables:
  IMAGE_REPO: "nexus.faridzarazvand.ir/kelaasor"
  IMAGE_NAME: "nodetest"
  IMAGE_TAG: "$CI_COMMIT_SHORT_SHA"

stages:
  - build
  - test
  - deploy

build-job:
  tags:
    - kelaasor
  # image: dind:27
  stage: build
  script:
    - docker build -t $IMAGE_REPO/$IMAGE_NAME:$IMAGE_TAG .

push-job:       # This job runs in the build stage, which runs first.
  tags:
    - kelaasor
  # image: node:18-alpine
  needs:
    - build-job
  stage: build
  before_script:
    # - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASS $IMAGE_REPO
    - echo $CI_REGISTRY_PASS | docker login -u $CI_REGISTRY_USER --password-stdin $IMAGE_REPO
  script:
    - docker push $IMAGE_REPO/$IMAGE_NAME:$IMAGE_TAG
  after_script:
    - docker logout

unit-test-job:   # This job runs in the test stage.
  image: node:18-alpine
  tags:
    - kelaasor
  stage: test    # It only starts when the job in the build stage completes successfully.
  before_script:
    - npm install --dev
  script:
    - npm test
  artifacts:
    when: always
    expire_in: "30 days"
    paths:
      - test-results/junit.xml
    reports:
      junit: test-results/junit.xml

lint-test-job:   # This job also runs in the test stage.
  tags:
    - kelaasor
  stage: test    # It can run at the same time as unit-test-job (in parallel).
  script:
    - echo "Linting code... This will take about 10 seconds."
    - sleep 1
    - echo "No lint issues found."

deploy-job:
  tags:
    - kelaasor
  image: alpine
  stage: deploy
  environment: production
  before_script:
    - apk add openssh
    - eval $(ssh-agent -s)
    - chmod 400 $SSH_PRIVATE_KEY
    - ssh-add "$SSH_PRIVATE_KEY"
    - ssh -o StrictHostKeyChecking=no $SSH_USER@$SERVER_HOST "
        mkdir -p /root/node-deploy/ &&
        sed -i 's|DEPLOY_ENV=.*|DEPLOY_ENV=$CI_ENVIRONMENT_NAME|' /root/node-deploy/.env &&
        sed -i 's|IMAGE_REPO=.*|IMAGE_REPO=$IMAGE_REPO|' /root/node-deploy/.env &&
        sed -i 's|IMAGE_NAME=.*|IMAGE_NAME=$IMAGE_NAME|' /root/node-deploy/.env &&
        sed -i 's|IMAGE_TAG=.*|IMAGE_TAG=$IMAGE_TAG|' /root/node-deploy/.env"
  script:
    - scp -o StrictHostKeyChecking=no -i $SSH_PRIVATE_KEY ./docker-compose.yml $SSH_USER@${SERVER_HOST}:/root/node-deploy/
    - ssh -o StrictHostKeyChecking=no -i $SSH_PRIVATE_KEY $SSH_USER@$SERVER_HOST "
        docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASS $IMAGE_REPO && 
        docker compose -f /root/node-deploy/docker-compose.yml down && 
        docker compose -f /root/node-deploy/docker-compose.yml up -d"
